c
if ccurrent_user.role
current_user.role
current_user
c
alert
notice
c
resource.errors
resource.errors.any?
c
resource.errors.any?
c
final_result.select{ |x| final_result.count(x) > 1}.uniq
final_result.select{ |x| final_result.count(x) >= 0}.uniq
final_result.select{ |x| final_result.count(x) > 1}.uniq
final_result
c
final_result
a
c
a
fetch_available_slots(salon_info)
c
fetch_available_slots(salon_info)
c
fetch_available_slots(salon_info)
c
final_result
c
appointment_result.present?
result_array
appointment_result
c
fetch_available_slots(salon_info)
c
fetch_available_slots(salon_info)
salon_info
c
final_result
c
!result[:count].zero?
final_result
c
!result[:count].zero?
n
appo_result[:start_time] == result[:slot]
final_result
c
final_result
c
!result[:count].zero?
result[:count].zero?
c
result_array
appointment_result
final_result
c
result[:slot]
(result[:count]) == 0
(result[:count])
result[:count]
c
result[:count]
c
result[:count]
c
result[:count]
c
result[:count]
c
result[:count]
c
result[:count]
c
result[:count]
c
result[:count]
c
result[:count]
c
result[:count]
c
(result[:count] - 1) == 0
result[:count]
result[:slot]
appo_result[:start_time]
c
final_result
c
final_result
c
appo_result[:start_time] == result_array.first[:slot]
appo_result[:start_time] == result[:slot]
result_array.first
result_array
appo_result
c
value
valye
key 
c
appointment_result
c
appointment_result
c
result_array.first[:slot]c
result_array.first[:slot]
result_array.first
result_array
c
salon_info.appointments.first.start_time
salon_info.appointments.first
salon_info.appointments
salon_info.appointment
salon_info
result_array
c
result_array
c
result_array
c
time_slot_list.first
time_slot_list
    end
      result_array << result
      result[:slot] = time
      result[:count] = salon_info.chair_count
time_slot_list.each do |time|
salon_info
    result_array = []
result = {}
time_slot_list
c
@appointment.save
@appointment = Appointment.create(appointment_params)
appointment_params
c
params
c
time_slot_list
c
salon_info.open
c
salon_info.open
c
salon_info.open + 10.minutes
salon_info.open
open_time + 10.minutes
open_time
date ("G:i", open_time)
date ("G:i", open_time);
open_time.to_t
open_time.to_f
open_time.to_i
open_time
c
salon_info.open
salon_info.open.strftime("%H:%M")
salon_info.open
c
salon_info.open.strftime("%H:%M")
c
salon_info.open.strftime("%H:%M")
c
salon_info.open
c
salon_info.open
c
salon_info.open
n
salon_info.open
n
salon_info.open += duration
salon_info.open
duration
salon_info.open += duration
time_slot_list
c
salon_info.open.strftime("%H:%M") <= salon_info.closes.strftime("%H:%M")
salon_info.open.strftime("%H:%M")
salon_info.open
salon_info.open.
salon_info.open.strftime("%H:%M")
salon_info.open
c
time_slot_list
salon_info.open
c
salon_info.open += duration
duration
time_slot_list << salon_info.open.strftime("%H:%M")
salon_info.open <= salon_info.closes
c
time_slot_list
c
f.object_id
f.object.id
f.object
f
c
SalonInfo.find_by_id(params[:salon_info]).salon_services.map{|service| [service.id.to_s, service.service_type]}
SalonInfo.find_by_id(params[:salon_info]).salon_services.map{|service| [service.id.to_s, service.name]}
SalonInfo.find_by_id(params[:salon_info])
params
parans
c
@salon_info.save!
c
a.length
a.lenght
a = "37AADCS0472N1Z1"
@salon_info.save!
c
resource.errors.full_messages
resource.errors.messages.join('|')
resource.errors.messages
resource.errors.messages[:base]
resource.errors.messages[:base].join('|')
resource.errors
c
@salon_info.save!
c
@salon_info.save!
c
salon_info_params
c
n
salon_info_params
params
